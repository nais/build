#
# NAIS build --- default configuration file.
#
# All other build configs depend on this file.
# Changing values here affects build parameters for everyone.
# Version bumps to Docker images can be done here.
#

description = "Default configuration file"
#team = ""  # FIXME: default = auto-detect from nais.yaml

#
# Branch deploy rules.
#

# The default is to always build and test, but not deploy.
[branch.".*"]
output = "build"  # or "release" if you want to test images, or "deploy"
deploy.profiles = ["default"]

# For main or master, we do a build, release and deploy.
# Deploys will be done sequentially to dev-gcp and prod-gcp.
[branch."^(main|master)$"]
output = "deploy"
deploy.profiles = ["default"]

[branch."^feature-preview-(.+)$"]
output = "deploy"
deploy.prefix = "$1"
deploy.parallel = false
deploy.profiles = ["dev-gcp"]

#
# SDK definitions.
# Software Development Kits definitions know how to build software (inside Docker).
#

# https://hub.docker.com/_/rust
[sdk.rust]
build_docker_image = "rust:1-alpine"
runtime_docker_image = "alpine:3"

# https://hub.docker.com/_/golang
[sdk.go]
build_docker_image = "golang:1-alpine"
runtime_docker_image = "alpine:3"

# https://hub.docker.com/_/eclipse-temurin
[sdk.gradle]
build_docker_image = "eclipse-temurin:21"
runtime_docker_image = "eclipse-temurin:21"
#settings_file = "settings.gradle.kts"

# Maven is currently at 3.9.8
[sdk.maven]
build_docker_image = "maven:3-eclipse-temurin-21"
runtime_docker_image = "eclipse-temurin:21"
version = "3"

[build]
type = "docker"
sdk = ""   # auto-detect as default

[build.docker]
# GAR: europe-north1-docker.pkg.dev/nais-management-233d/a11y-statement/accessibility-reporting-tool@sha256:3587dc072472352b53021da45b8a4a6b2ec0dc67bc00c47a4b211b3fda7e5e84
registry = ""
image_name = "europe-north1-docker.pkg.dev/nais-management-233d/{{ team }}/{{ app }}"
image_tag = "{{ iso_date }}.{{ iso_time }}.{{ git_short_sha }}"
auto_generate = true
# input_files
output_files = ["/nais-build/*"]
user.id = 1069
user.name = "nobody"
group.id = 1069
group.name = "nobody"

# FROM build_image as builder
# byggeprosessen

# FROM base_runtime_image
# COPY...

[release]
type = "gar"
# name = "my-application"

[release.gar]
# GAR:    europe-north1-docker.pkg.dev/nais-management-233d/<team>/<app>:<tag>
# Github: ghcr.io/navikt                                          /<app>:<tag>
registry = "europe-north1-docker.pkg.dev/nais-management-233d"

[release.ghcr]
# Github: ghcr.io/navikt/<app>:<tag>
registry = "ghcr.io/navikt"

#
# Deploy an application to NAIS using nais deploy.
#
[deploy]
type = "nais"

[deploy.nais]
tenant = "nav"
nais_yaml = ""  # blank value means to auto-detect from file system

[deploy.nais.profiles.default]
clusters = ["dev-gcp", "prod-gcp"]
nais_yaml = [".nais/nais.yml"]
nais_var_files = [".nais/vars.yml"]
parallell = true

[deploy.nais.profiles.dev-gcp]
clusters = ["dev-gcp"]
nais_yaml = [".nais/nais.yml"]
nais_var_files = [".nais/dev-gcp.yml"]
parallell = true

[deploy.nais.profiles.prod-gcp]
clusters = ["prod-gcp"]
nais_yaml = [".nais/nais.yml"]
nais_var_files = [".nais/prod-gcp.yml"]
parallell = true

# example
#[deploy.nais.profiles.tbd]
#clusters = ["dev-gcp", "prod-gcp"]
#nais_yaml = [".nais/app.yml", ".nais/topic.yml", ".nais/acl.yml"]
#nais_var_files = [".nais/vars.yml", ".nais/foo.yml"]
#parallell = false